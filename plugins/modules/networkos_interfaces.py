#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2019 <company_name>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

##############################################
################# WARNING ####################
##############################################
###
### This file is auto generated by the resource
###   module builder playbook.
###
### Do not edit this file manually.
###
### Changes to this file will be over written
###   by the resource module builder.
###
### Changes should be made in the model used to
###   generate this file or in the resource module
###   builder template.
###
##############################################
##############################################
##############################################

"""
The module file for networkos_interfaces
"""

from __future__ import absolute_import, division, print_function
from ansible.module_utils.basic import AnsibleModule
from ansible_collections.trishnag.my_collection.plugins.module_utils. \
     networkos.config.interfaces.interfaces import Interfaces

ANSIBLE_METADATA = {'metadata_version': '1.1',
                    'status': [u'preview'],
                    'supported_by': [u'<support_group>']}


DOCUMENTATION = """
---
module: networkos_interfaces
version_added: 2.8
short_description: Manages <xxxx> attributes of <network_os> <resource>.
description: [u'Manages <xxxx> attributes of <network_os> <resource>.']
author: [u'Ansible Network Engineer']
options:
  config:
    description: The provided configuration
    suboptions:
      some_bool:
        description:
        - The some_bool.
        type: bool
      some_dict:
        description:
        - The some_dict.
        suboptions:
          property_01:
            description:
            - The property_01
            type: str
          property_02:
            choices:
            - choice_a
            - choice_b
            - choice_c
            default: choice_a
            description:
            - The some_string_01
            type: str
      some_int:
        description:
        - The some_int.
        type: int
        version_added: '1.1'
      some_list_of_dicts:
        description: An array of dicts
        suboptions:
          property_01:
            description:
            - The property_01
            type: str
          property_02:
            choices:
            - choice_a
            - choice_b
            - choice_c
            default: choice_a
            description:
            - The some_string_01
            type: str
      some_string:
        choices:
        - choice_a
        - choice_b
        - choice_c
        default: choice_a
        description:
        - The some_string_01
        required: true
        type: str
  state:
    choices:
    - merged
    - replaced
    - overridden
    - deleted
    default: merged
    description:
    - The state the configuration should be left in
    type: str

"""

EXAMPLES = """
---

# Using merged

<placeholder for the configuration example prior to module invocation>

- name: Configure interfaces
  nxos_interfaces:
    config:
      - name: Ethernet1/1
        description: 'Configured by Ansible'
        enable: True
      - name: Ethernet1/2
        description: 'Configured by Ansible'
        enable: False
    operation: merged

<placeholder for the configuration example after module invocation>

# Using replaced

<placeholder for the configuration example prior to module invocation>

- name: Configure interfaces
  nxos_interfaces:
    config:
      - name: Ethernet1/1
        description: 'Configured by Ansible'
        enable: True
      - name: Ethernet1/2
        description: 'Configured by Ansible'
        enable: False
    operation: replaced

<placeholder for the configuration example after module invocation>

# Using overridden

<placeholder for the configuration example prior to module invocation>

- name: Configure interfaces
  myos_interfaces:
    config:
      - name: Ethernet1/1
        description: 'Configured by Ansible'
        enable: True
      - name: Ethernet1/2
        description: 'Configured by Ansible'
        enable: False
    operation: overridden

<placeholder for the configuration example after module invocation>

# Using deleted

<placeholder for the configuration example prior to module invocation>

- name: Configure interfaces
  myos_interfaces:
    operation: deleted

<placeholder for the configuration example after module invocation>
"""

RETURN = """
before:
  description: The configuration prior to the model invocation
  returned: always
  sample: The configuration returned will alwys be in the same format of the paramters above.
after:
  description: The resulting configuration model invocation
  returned: when changed
  sample: The configuration returned will alwys be in the same format of the paramters above.
commands:
  description: The set of commands pushed to the remote device
  returned: always
  type: list
  sample: ['command 1', 'command 2', 'command 3']
"""


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=Interfaces.argument_spec,
                           supports_check_mode=True)

    result = Interfaces(module).execute_module()
    module.exit_json(**result)

if __name__ == '__main__':
    main()
